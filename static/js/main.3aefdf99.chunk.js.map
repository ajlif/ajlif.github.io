{"version":3,"sources":["components/NavMenu.tsx","components/Layout.tsx","shared/images/stackTech.png","shared/components/Experience.tsx","shared/components/Education.tsx","shared/components/Skill.tsx","shared/components/Certification.tsx","components/myCv.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavMenu","state","isOpen","name","surName","istitute","isLoading","componentDidMount","getInstituteLogo","institute","toggle","setState","this","Navbar","className","light","Container","NavbarToggler","onClick","Skeleton","variant","width","NavbarBrand","tag","Link","to","src","alt","Collapse","navbar","NavItem","NavLink","exact","RRNavLink","activeClassName","height","Avatar","substring","React","Layout","props","children","Experience","stackTech","loading","Education","Skill","Certification","MyCv","href","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3aefdf99.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link, NavLink as RRNavLink } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n//import {getInitialData} from '../services/Session.service';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport './NavMenu.scss';\r\n\r\n/*\r\ninterface IProps {\r\n    children: React.ReactNode;\r\n    // any other props that come into the component\r\n} */\r\n\r\ntype navMenuState = {\r\n    isOpen: boolean,\r\n    name: string,\r\n    surName: string,\r\n    istitute: string,\r\n    isLoading: boolean\r\n}\r\n\r\nexport default class NavMenu extends React.PureComponent<{}, navMenuState> {\r\n    public state = {\r\n        isOpen: false,\r\n        name: \"\",\r\n        surName: \"\",\r\n        istitute: \"\",\r\n        isLoading: true\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        //this.fetchInitialData();\r\n    }\r\n\r\n   /* fetchInitialData = () => {\r\n        let self: any = this;\r\n        getInitialData().then(response => {\r\n            if (response)\r\n                self.setState({\r\n                    name: response?.Nome || \"\",\r\n                    surName: response?.Cognome || \"\",\r\n                    istitute: response?.Istituto || \"\",\r\n                    isLoading: false\r\n                });\r\n        }, reason => {\r\n            console.error(reason);\r\n        });\r\n    }*/\r\n\r\n    getInstituteLogo = (institute: string) : any => {\r\n        switch (institute){\r\n            case '00001': \r\n                return \"credemAssicurazioniLogo\";\r\n            case \"00002\" :\r\n                return \"credemAssicurazioniLogo\";\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        const { isOpen, name,surName, istitute, isLoading} = this.state;\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow\" light>\r\n                        <Container>\r\n                            <NavbarToggler onClick={this.toggle} className=\"\" />\r\n\r\n                            {isLoading ? (\r\n                                    <>\r\n                                    <Skeleton className=\"m-2\" variant=\"rect\" width={100}></Skeleton>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <NavbarBrand tag={Link} to=\"/\" ><img src={this.getInstituteLogo(istitute)} alt=\"Logo\" className=\"logo\" /></NavbarBrand>\r\n                                    </>\r\n                                )}\r\n                            \r\n                            <Collapse className=\"d-sm-inline-flex\" isOpen={isOpen} navbar>\r\n                                <ul className=\"navbar-nav flex-grow\">\r\n                                    <NavItem>\r\n                                        <NavLink exact tag={RRNavLink} to=\"/\" activeClassName=\"menu-selected\"><strong className=\"menu\">My Cv</strong></NavLink>\r\n                                    </NavItem>\r\n                                </ul>\r\n                            </Collapse>\r\n\r\n                            <div className=\"d-flex flex-row-reverse\">\r\n                                {isLoading ? (\r\n                                    <>\r\n                                        <Skeleton className=\"align-self-center\" variant=\"text\" width={140} height={35} />\r\n                                        <Skeleton className=\"m-1\" variant=\"circle\" width={40} height={40} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <strong className=\"align-self-center user\">{name + \" \" + surName}</strong>\r\n                                        <Avatar className=\"m-2\">{name.substring(0, 1) + surName.substring(0, 1)}</Avatar>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport NavMenu from './NavMenu';\r\n\r\nexport default class Layout extends React.PureComponent<{}, { children?: React.ReactNode }> {\r\n    public render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavMenu />\r\n                <div>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/stackTech.117c9d42.png\";","import React from 'react';\r\nimport stackTech from \"../../shared/images/stackTech.png\";\r\n\r\n\r\n\r\nconst Experience = () => {\r\n\r\n    return (\r\n        <div className=\"experience-card\">\r\n            <div className=\"experience-header\">\r\n                <img className=\"experience-picture\" src={stackTech} alt=\"stackTech\" loading=\"lazy\"/>\r\n                <div className=\"experience-details\">\r\n                        <h6><i className=\"bi bi-person-workspace\"></i>Junior Software engineer - Alten</h6>\r\n                        <h6><i className=\"bi bi-geo-alt-fill\"></i>Milan, Italy [Oct 2021 - Now[ 2 months</h6>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"experience-description\">  \r\n            <hr/>\r\n            <p><i className=\"bi bi-stack\"></i>IDENTY: implementation of a session management console used for video recognition of new customers.\r\n               test test test testtest test test test test test test test\r\n               test test test testtest test test test test test test test\r\n               test test test testtest test test test test test test test\r\n            </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\nimport stackTech from \"../../shared/images/stackTech.png\";\r\n\r\n\r\nconst Education = () => {\r\n\r\n    return (\r\n        <div className=\"education-card\">\r\n            <div className=\"experience-header\">\r\n                <img className=\"experience-picture\" src={stackTech} alt=\"stackTech\" loading=\"lazy\" />\r\n                <h6><i className=\"bi bi-geo-alt-fill\"></i>University of Modena and Reggio Emilia</h6>\r\n                <h6><i className=\"bi bi-mortarboard-fill\"></i>Master in Computer Science 2017-2020</h6>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\n\r\n\r\nconst Skill = () => {\r\n    \r\n    return (\r\n        <div className=\"skill\">\r\n            <span>typescript</span>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Skill;","import React from 'react';\r\nimport stackTech from \"../../shared/images/stackTech.png\";\r\n\r\n\r\nconst Certification = () => {\r\n\r\n    return (\r\n        <div className=\"certification-card\">\r\n            <div className=\"experience-header\">\r\n            <div className=\"certification-content\">\r\n                <h6>IELTS - (B2) </h6>\r\n                <h6>Britsh Council</h6>\r\n                <h6>Issued 2017 </h6>\r\n                <img className=\"certification-picture\" src={stackTech} alt=\"stackTech\" loading=\"lazy\" />\r\n            </div>\r\n            <div className=\"certification-content\">\r\n                <h6>IELTS - (B2) </h6>\r\n                <h6>Britsh Council</h6>\r\n                <h6>Issued 2017 </h6>\r\n                <img className=\"certification-picture\" src={stackTech} alt=\"stackTech\" loading=\"lazy\" />\r\n            </div>\r\n            <div className=\"certification-content\">\r\n                <h6>IELTS - (B2) </h6>\r\n                <h6>Britsh Council</h6>\r\n                <h6>Issued 2017 </h6>\r\n                <img className=\"certification-picture\" src={stackTech} alt=\"stackTech\" loading=\"lazy\" />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Certification;","import React from \"react\";\r\nimport Experience from \"../shared/components/Experience\";\r\nimport Education from \"../shared/components/Education\";\r\nimport Skill from \"../shared/components/Skill\";\r\nimport Certification from \"../shared/components/Certification\";\r\nimport stackTech from \"../shared/images/stackTech.png\";\r\n\r\nconst MyCv = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"header-cv\">\r\n        <h1>container fluid</h1>\r\n        <h1>container fluid</h1>\r\n        <div className=\"presentation-card\">\r\n          <p>\r\n            just q text to test if it is centered test yes it may work and i\r\n            know it will work, just q text to test if it is centered test yes it\r\n            may work and i know it will work, just q text to test if it is\r\n            centered test yes it may work and i know it will work just q text to\r\n            test if it is centered test yes it may work and i know it will work\r\n          </p>\r\n        </div>\r\n        <img className=\"presentation-picture\" src={stackTech} alt=\"stackTech\" />\r\n      </div>\r\n\r\n      <div className=\"container-cv\">\r\n        <div className=\"flex-container\">\r\n          <div className=\"flex-item-left\">\r\n            <h2>Experience</h2>\r\n            <Experience />\r\n            <Experience />\r\n            <Experience />\r\n            <Experience />\r\n          </div>\r\n\r\n          <div className=\"flex-item-right\">\r\n            <h2>Education</h2>\r\n            <Education/>\r\n            <Education/>\r\n\r\n            <h2>Licenses and certifications</h2>\r\n            <div className=\"container-experiences\">1</div>\r\n            <Certification/>\r\n\r\n            <h2>Skills and endorsements</h2>\r\n            <div className=\"skill-container\">\r\n              <Skill />\r\n              <Skill />\r\n              <Skill />\r\n              <Skill />\r\n              <Skill />\r\n              <Skill />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"options\">\r\n        <button>\r\n          <i className=\"bi bi-envelope-plus-fill\"></i>\r\n        </button>\r\n        <button>\r\n          <i className=\"bi bi-download\"></i>\r\n        </button>\r\n        <button>\r\n          <i className=\"bi bi-arrow-up-circle-fill\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <a href=\"https://github.com/ajlif\"><i className=\"bi bi-github social-footer\"></i></a>\r\n        <a href=\"https://www.linkedin.com/in/ala-jlif\"><i className=\"bi bi-linkedin social-footer\"></i></a>\r\n        <a href=\"https://twitter.com/ala_j\"><i className=\"bi bi-twitter social-footer\"></i></a>\r\n        <a href=\"https://it-it.facebook.com/partir.P75\"><i className=\"bi bi-facebook social-footer\"></i></a>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCv;\r\n","import * as React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.scss';\r\nimport {Route} from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport MyCv from './components/myCv';\r\n\r\nconst App = () => (\r\n  <Layout>\r\n      <Route exact path='/' component={MyCv} />\r\n  </Layout>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.scss';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}